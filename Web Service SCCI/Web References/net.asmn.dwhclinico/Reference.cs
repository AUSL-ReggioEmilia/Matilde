//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WsSCCI.net.asmn.dwhclinico {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataAccessTdsV2Soap", Namespace="http://dwhClinico.org/webService/dataAccessTds/2")]
    public partial class DataAccessTdsV2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PazientiCercaOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazientiCercaSoundexOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazientiCercaClassificazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazientePerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazientePerAnagraficaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerPazienteClassificazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerPazienteFuzzyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerPazienteRiferimentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerClassificazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerNosologicoAziendaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertiPerNumeroRefertoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertoPerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrestazioniRefertiPerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrestazioniMatriceLabPerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrestazioniMatriceLabPerNosologicoAziendaOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrestazioniMatriceLab2PerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventiPerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventiPerPazienteFuzzyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventiPerPazienteRiferimentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventiPerNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventoPerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveriPerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveriPerPazienteFuzzyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveriPerPazienteRiferimentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveriPerNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveroPerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveroPerNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerPazienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerPazienteClassificazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerPazienteFuzzyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerPazienteRiferimentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerClassificazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerNosologicoAziendaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerNumeroRefertoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerPazienteNosologicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerNumeroPrenotazioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback Referti2PerIdOrderEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RicoveriPerRepartoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Ricoveri2PerRepartoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefertoPdfPerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazientiRiepilogoPerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PazienteRiepilogoPerIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataAccessTdsV2() {
            this.Url = "http://dwh-clinico.asmn.net/Ws2/DataAccessTdsV2.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PazientiCercaCompletedEventHandler PazientiCercaCompleted;
        
        /// <remarks/>
        public event PazientiCercaSoundexCompletedEventHandler PazientiCercaSoundexCompleted;
        
        /// <remarks/>
        public event PazientiCercaClassificazioneCompletedEventHandler PazientiCercaClassificazioneCompleted;
        
        /// <remarks/>
        public event PazientePerIdCompletedEventHandler PazientePerIdCompleted;
        
        /// <remarks/>
        public event PazientePerAnagraficaCompletedEventHandler PazientePerAnagraficaCompleted;
        
        /// <remarks/>
        public event RefertiPerPazienteCompletedEventHandler RefertiPerPazienteCompleted;
        
        /// <remarks/>
        public event RefertiPerPazienteClassificazioneCompletedEventHandler RefertiPerPazienteClassificazioneCompleted;
        
        /// <remarks/>
        public event RefertiPerPazienteFuzzyCompletedEventHandler RefertiPerPazienteFuzzyCompleted;
        
        /// <remarks/>
        public event RefertiPerPazienteRiferimentiCompletedEventHandler RefertiPerPazienteRiferimentiCompleted;
        
        /// <remarks/>
        public event RefertiPerClassificazioneCompletedEventHandler RefertiPerClassificazioneCompleted;
        
        /// <remarks/>
        public event RefertiPerNosologicoCompletedEventHandler RefertiPerNosologicoCompleted;
        
        /// <remarks/>
        public event RefertiPerNosologicoAziendaCompletedEventHandler RefertiPerNosologicoAziendaCompleted;
        
        /// <remarks/>
        public event RefertiPerNumeroRefertoCompletedEventHandler RefertiPerNumeroRefertoCompleted;
        
        /// <remarks/>
        public event RefertoPerIdCompletedEventHandler RefertoPerIdCompleted;
        
        /// <remarks/>
        public event PrestazioniRefertiPerPazienteCompletedEventHandler PrestazioniRefertiPerPazienteCompleted;
        
        /// <remarks/>
        public event PrestazioniMatriceLabPerPazienteCompletedEventHandler PrestazioniMatriceLabPerPazienteCompleted;
        
        /// <remarks/>
        public event PrestazioniMatriceLabPerNosologicoAziendaCompletedEventHandler PrestazioniMatriceLabPerNosologicoAziendaCompleted;
        
        /// <remarks/>
        public event PrestazioniMatriceLab2PerPazienteCompletedEventHandler PrestazioniMatriceLab2PerPazienteCompleted;
        
        /// <remarks/>
        public event PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventHandler PrestazioniMatriceLab2PerNosologicoAziendaCompleted;
        
        /// <remarks/>
        public event EventiPerPazienteCompletedEventHandler EventiPerPazienteCompleted;
        
        /// <remarks/>
        public event EventiPerPazienteFuzzyCompletedEventHandler EventiPerPazienteFuzzyCompleted;
        
        /// <remarks/>
        public event EventiPerPazienteRiferimentiCompletedEventHandler EventiPerPazienteRiferimentiCompleted;
        
        /// <remarks/>
        public event EventiPerNosologicoCompletedEventHandler EventiPerNosologicoCompleted;
        
        /// <remarks/>
        public event EventoPerIdCompletedEventHandler EventoPerIdCompleted;
        
        /// <remarks/>
        public event RicoveriPerPazienteCompletedEventHandler RicoveriPerPazienteCompleted;
        
        /// <remarks/>
        public event RicoveriPerPazienteFuzzyCompletedEventHandler RicoveriPerPazienteFuzzyCompleted;
        
        /// <remarks/>
        public event RicoveriPerPazienteRiferimentiCompletedEventHandler RicoveriPerPazienteRiferimentiCompleted;
        
        /// <remarks/>
        public event RicoveriPerNosologicoCompletedEventHandler RicoveriPerNosologicoCompleted;
        
        /// <remarks/>
        public event RicoveroPerIdCompletedEventHandler RicoveroPerIdCompleted;
        
        /// <remarks/>
        public event RicoveroPerNosologicoCompletedEventHandler RicoveroPerNosologicoCompleted;
        
        /// <remarks/>
        public event Referti2PerPazienteCompletedEventHandler Referti2PerPazienteCompleted;
        
        /// <remarks/>
        public event Referti2PerPazienteClassificazioneCompletedEventHandler Referti2PerPazienteClassificazioneCompleted;
        
        /// <remarks/>
        public event Referti2PerPazienteFuzzyCompletedEventHandler Referti2PerPazienteFuzzyCompleted;
        
        /// <remarks/>
        public event Referti2PerPazienteRiferimentiCompletedEventHandler Referti2PerPazienteRiferimentiCompleted;
        
        /// <remarks/>
        public event Referti2PerClassificazioneCompletedEventHandler Referti2PerClassificazioneCompleted;
        
        /// <remarks/>
        public event Referti2PerNosologicoCompletedEventHandler Referti2PerNosologicoCompleted;
        
        /// <remarks/>
        public event Referti2PerNosologicoAziendaCompletedEventHandler Referti2PerNosologicoAziendaCompleted;
        
        /// <remarks/>
        public event Referti2PerNumeroRefertoCompletedEventHandler Referti2PerNumeroRefertoCompleted;
        
        /// <remarks/>
        public event Referti2PerPazienteNosologicoCompletedEventHandler Referti2PerPazienteNosologicoCompleted;
        
        /// <remarks/>
        public event Referti2PerNumeroPrenotazioneCompletedEventHandler Referti2PerNumeroPrenotazioneCompleted;
        
        /// <remarks/>
        public event Referti2PerIdOrderEntryCompletedEventHandler Referti2PerIdOrderEntryCompleted;
        
        /// <remarks/>
        public event RicoveriPerRepartoCompletedEventHandler RicoveriPerRepartoCompleted;
        
        /// <remarks/>
        public event Ricoveri2PerRepartoCompletedEventHandler Ricoveri2PerRepartoCompleted;
        
        /// <remarks/>
        public event RefertoPdfPerIdCompletedEventHandler RefertoPdfPerIdCompleted;
        
        /// <remarks/>
        public event PazientiRiepilogoPerIdCompletedEventHandler PazientiRiepilogoPerIdCompleted;
        
        /// <remarks/>
        public event PazienteRiepilogoPerIdCompletedEventHandler PazienteRiepilogoPerIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientiCerca", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientiCerca(string Cognome, string Nome, string DataNascita, string LuogoNascita) {
            object[] results = this.Invoke("PazientiCerca", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientiCerca(string Cognome, string Nome, string DataNascita, string LuogoNascita, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientiCerca", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientiCerca(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientiCercaAsync(string Cognome, string Nome, string DataNascita, string LuogoNascita) {
            this.PazientiCercaAsync(Cognome, Nome, DataNascita, LuogoNascita, null);
        }
        
        /// <remarks/>
        public void PazientiCercaAsync(string Cognome, string Nome, string DataNascita, string LuogoNascita, object userState) {
            if ((this.PazientiCercaOperationCompleted == null)) {
                this.PazientiCercaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientiCercaOperationCompleted);
            }
            this.InvokeAsync("PazientiCerca", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita}, this.PazientiCercaOperationCompleted, userState);
        }
        
        private void OnPazientiCercaOperationCompleted(object arg) {
            if ((this.PazientiCercaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientiCercaCompleted(this, new PazientiCercaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientiCercaSoundex", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientiCercaSoundex(string Cognome, string Nome, string DataNascita, string LuogoNascita) {
            object[] results = this.Invoke("PazientiCercaSoundex", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientiCercaSoundex(string Cognome, string Nome, string DataNascita, string LuogoNascita, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientiCercaSoundex", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientiCercaSoundex(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientiCercaSoundexAsync(string Cognome, string Nome, string DataNascita, string LuogoNascita) {
            this.PazientiCercaSoundexAsync(Cognome, Nome, DataNascita, LuogoNascita, null);
        }
        
        /// <remarks/>
        public void PazientiCercaSoundexAsync(string Cognome, string Nome, string DataNascita, string LuogoNascita, object userState) {
            if ((this.PazientiCercaSoundexOperationCompleted == null)) {
                this.PazientiCercaSoundexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientiCercaSoundexOperationCompleted);
            }
            this.InvokeAsync("PazientiCercaSoundex", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        LuogoNascita}, this.PazientiCercaSoundexOperationCompleted, userState);
        }
        
        private void OnPazientiCercaSoundexOperationCompleted(object arg) {
            if ((this.PazientiCercaSoundexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientiCercaSoundexCompleted(this, new PazientiCercaSoundexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientiCercaClassificazione", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientiCercaClassificazione(string Classificazione) {
            object[] results = this.Invoke("PazientiCercaClassificazione", new object[] {
                        Classificazione});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientiCercaClassificazione(string Classificazione, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientiCercaClassificazione", new object[] {
                        Classificazione}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientiCercaClassificazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientiCercaClassificazioneAsync(string Classificazione) {
            this.PazientiCercaClassificazioneAsync(Classificazione, null);
        }
        
        /// <remarks/>
        public void PazientiCercaClassificazioneAsync(string Classificazione, object userState) {
            if ((this.PazientiCercaClassificazioneOperationCompleted == null)) {
                this.PazientiCercaClassificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientiCercaClassificazioneOperationCompleted);
            }
            this.InvokeAsync("PazientiCercaClassificazione", new object[] {
                        Classificazione}, this.PazientiCercaClassificazioneOperationCompleted, userState);
        }
        
        private void OnPazientiCercaClassificazioneOperationCompleted(object arg) {
            if ((this.PazientiCercaClassificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientiCercaClassificazioneCompleted(this, new PazientiCercaClassificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientePerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientePerId(string IdPazienti) {
            object[] results = this.Invoke("PazientePerId", new object[] {
                        IdPazienti});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientePerId(string IdPazienti, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientePerId", new object[] {
                        IdPazienti}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientePerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientePerIdAsync(string IdPazienti) {
            this.PazientePerIdAsync(IdPazienti, null);
        }
        
        /// <remarks/>
        public void PazientePerIdAsync(string IdPazienti, object userState) {
            if ((this.PazientePerIdOperationCompleted == null)) {
                this.PazientePerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientePerIdOperationCompleted);
            }
            this.InvokeAsync("PazientePerId", new object[] {
                        IdPazienti}, this.PazientePerIdOperationCompleted, userState);
        }
        
        private void OnPazientePerIdOperationCompleted(object arg) {
            if ((this.PazientePerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientePerIdCompleted(this, new PazientePerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientePerAnagrafica", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientePerAnagrafica(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale) {
            object[] results = this.Invoke("PazientePerAnagrafica", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientePerAnagrafica(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientePerAnagrafica", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientePerAnagrafica(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientePerAnagraficaAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale) {
            this.PazientePerAnagraficaAsync(CodiceAnagraficaCentrale, NomeAnagraficaCentrale, null);
        }
        
        /// <remarks/>
        public void PazientePerAnagraficaAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, object userState) {
            if ((this.PazientePerAnagraficaOperationCompleted == null)) {
                this.PazientePerAnagraficaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientePerAnagraficaOperationCompleted);
            }
            this.InvokeAsync("PazientePerAnagrafica", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale}, this.PazientePerAnagraficaOperationCompleted, userState);
        }
        
        private void OnPazientePerAnagraficaOperationCompleted(object arg) {
            if ((this.PazientePerAnagraficaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientePerAnagraficaCompleted(this, new PazientePerAnagraficaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerPaziente", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.RefertiPerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerPazienteOperationCompleted == null)) {
                this.RefertiPerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerPazienteOperationCompleted);
            }
            this.InvokeAsync("RefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.RefertiPerPazienteOperationCompleted, userState);
        }
        
        private void OnRefertiPerPazienteOperationCompleted(object arg) {
            if ((this.RefertiPerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerPazienteCompleted(this, new RefertiPerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerPazienteClassificazion" +
            "e", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerPazienteClassificazione(string IdPaziente, string Classificazione, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerPazienteClassificazione(string IdPaziente, string Classificazione, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerPazienteClassificazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerPazienteClassificazioneAsync(string IdPaziente, string Classificazione, string DallaData, string AllaData) {
            this.RefertiPerPazienteClassificazioneAsync(IdPaziente, Classificazione, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerPazienteClassificazioneAsync(string IdPaziente, string Classificazione, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerPazienteClassificazioneOperationCompleted == null)) {
                this.RefertiPerPazienteClassificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerPazienteClassificazioneOperationCompleted);
            }
            this.InvokeAsync("RefertiPerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData}, this.RefertiPerPazienteClassificazioneOperationCompleted, userState);
        }
        
        private void OnRefertiPerPazienteClassificazioneOperationCompleted(object arg) {
            if ((this.RefertiPerPazienteClassificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerPazienteClassificazioneCompleted(this, new RefertiPerPazienteClassificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerPazienteFuzzy", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerPazienteFuzzy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.RefertiPerPazienteFuzzyAsync(Cognome, Nome, DataNascita, CodiceFiscale, CodiceSanitario, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerPazienteFuzzyOperationCompleted == null)) {
                this.RefertiPerPazienteFuzzyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerPazienteFuzzyOperationCompleted);
            }
            this.InvokeAsync("RefertiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.RefertiPerPazienteFuzzyOperationCompleted, userState);
        }
        
        private void OnRefertiPerPazienteFuzzyOperationCompleted(object arg) {
            if ((this.RefertiPerPazienteFuzzyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerPazienteFuzzyCompleted(this, new RefertiPerPazienteFuzzyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerPazienteRiferimenti", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerPazienteRiferimenti(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.RefertiPerPazienteRiferimentiAsync(CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerPazienteRiferimentiOperationCompleted == null)) {
                this.RefertiPerPazienteRiferimentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerPazienteRiferimentiOperationCompleted);
            }
            this.InvokeAsync("RefertiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.RefertiPerPazienteRiferimentiOperationCompleted, userState);
        }
        
        private void OnRefertiPerPazienteRiferimentiOperationCompleted(object arg) {
            if ((this.RefertiPerPazienteRiferimentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerPazienteRiferimentiCompleted(this, new RefertiPerPazienteRiferimentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerClassificazione", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerClassificazione(string Classificazione, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerClassificazione(string Classificazione, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerClassificazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerClassificazioneAsync(string Classificazione, string DallaData, string AllaData) {
            this.RefertiPerClassificazioneAsync(Classificazione, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerClassificazioneAsync(string Classificazione, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerClassificazioneOperationCompleted == null)) {
                this.RefertiPerClassificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerClassificazioneOperationCompleted);
            }
            this.InvokeAsync("RefertiPerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData}, this.RefertiPerClassificazioneOperationCompleted, userState);
        }
        
        private void OnRefertiPerClassificazioneOperationCompleted(object arg) {
            if ((this.RefertiPerClassificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerClassificazioneCompleted(this, new RefertiPerClassificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerNosologico(string Nosologico, string DallaData, string AllaData) {
            object[] results = this.Invoke("RefertiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerNosologico(string Nosologico, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerNosologicoAsync(string Nosologico, string DallaData, string AllaData) {
            this.RefertiPerNosologicoAsync(Nosologico, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RefertiPerNosologicoAsync(string Nosologico, string DallaData, string AllaData, object userState) {
            if ((this.RefertiPerNosologicoOperationCompleted == null)) {
                this.RefertiPerNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerNosologicoOperationCompleted);
            }
            this.InvokeAsync("RefertiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, this.RefertiPerNosologicoOperationCompleted, userState);
        }
        
        private void OnRefertiPerNosologicoOperationCompleted(object arg) {
            if ((this.RefertiPerNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerNosologicoCompleted(this, new RefertiPerNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerNosologicoAzienda", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerNosologicoAzienda(string Nosologico, string Azienda) {
            object[] results = this.Invoke("RefertiPerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerNosologicoAzienda(string Nosologico, string Azienda, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerNosologicoAzienda(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerNosologicoAziendaAsync(string Nosologico, string Azienda) {
            this.RefertiPerNosologicoAziendaAsync(Nosologico, Azienda, null);
        }
        
        /// <remarks/>
        public void RefertiPerNosologicoAziendaAsync(string Nosologico, string Azienda, object userState) {
            if ((this.RefertiPerNosologicoAziendaOperationCompleted == null)) {
                this.RefertiPerNosologicoAziendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerNosologicoAziendaOperationCompleted);
            }
            this.InvokeAsync("RefertiPerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda}, this.RefertiPerNosologicoAziendaOperationCompleted, userState);
        }
        
        private void OnRefertiPerNosologicoAziendaOperationCompleted(object arg) {
            if ((this.RefertiPerNosologicoAziendaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerNosologicoAziendaCompleted(this, new RefertiPerNosologicoAziendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertiPerNumeroReferto", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertiPerNumeroReferto(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno) {
            object[] results = this.Invoke("RefertiPerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertiPerNumeroReferto(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertiPerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertiPerNumeroReferto(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertiPerNumeroRefertoAsync(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno) {
            this.RefertiPerNumeroRefertoAsync(AziendaErogante, SistemaErogante, RepartoErogante, NumeroReferto, AnnoReferto, CodiceFiscale, IdPazienteEsterno, null);
        }
        
        /// <remarks/>
        public void RefertiPerNumeroRefertoAsync(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno, object userState) {
            if ((this.RefertiPerNumeroRefertoOperationCompleted == null)) {
                this.RefertiPerNumeroRefertoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertiPerNumeroRefertoOperationCompleted);
            }
            this.InvokeAsync("RefertiPerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno}, this.RefertiPerNumeroRefertoOperationCompleted, userState);
        }
        
        private void OnRefertiPerNumeroRefertoOperationCompleted(object arg) {
            if ((this.RefertiPerNumeroRefertoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertiPerNumeroRefertoCompleted(this, new RefertiPerNumeroRefertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertoPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertoPerId(string IdReferto) {
            object[] results = this.Invoke("RefertoPerId", new object[] {
                        IdReferto});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertoPerId(string IdReferto, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertoPerId", new object[] {
                        IdReferto}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertoPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertoPerIdAsync(string IdReferto) {
            this.RefertoPerIdAsync(IdReferto, null);
        }
        
        /// <remarks/>
        public void RefertoPerIdAsync(string IdReferto, object userState) {
            if ((this.RefertoPerIdOperationCompleted == null)) {
                this.RefertoPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertoPerIdOperationCompleted);
            }
            this.InvokeAsync("RefertoPerId", new object[] {
                        IdReferto}, this.RefertoPerIdOperationCompleted, userState);
        }
        
        private void OnRefertoPerIdOperationCompleted(object arg) {
            if ((this.RefertoPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertoPerIdCompleted(this, new RefertoPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PrestazioniRefertiPerPaziente", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrestazioniRefertiPerPaziente(string IdPaziente, string DallaDataReferto, string SistemaErogante, string RepartoErogante, string PrestazioneCodice, string SezioneCodice) {
            object[] results = this.Invoke("PrestazioniRefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaDataReferto,
                        SistemaErogante,
                        RepartoErogante,
                        PrestazioneCodice,
                        SezioneCodice});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrestazioniRefertiPerPaziente(string IdPaziente, string DallaDataReferto, string SistemaErogante, string RepartoErogante, string PrestazioneCodice, string SezioneCodice, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrestazioniRefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaDataReferto,
                        SistemaErogante,
                        RepartoErogante,
                        PrestazioneCodice,
                        SezioneCodice}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPrestazioniRefertiPerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrestazioniRefertiPerPazienteAsync(string IdPaziente, string DallaDataReferto, string SistemaErogante, string RepartoErogante, string PrestazioneCodice, string SezioneCodice) {
            this.PrestazioniRefertiPerPazienteAsync(IdPaziente, DallaDataReferto, SistemaErogante, RepartoErogante, PrestazioneCodice, SezioneCodice, null);
        }
        
        /// <remarks/>
        public void PrestazioniRefertiPerPazienteAsync(string IdPaziente, string DallaDataReferto, string SistemaErogante, string RepartoErogante, string PrestazioneCodice, string SezioneCodice, object userState) {
            if ((this.PrestazioniRefertiPerPazienteOperationCompleted == null)) {
                this.PrestazioniRefertiPerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrestazioniRefertiPerPazienteOperationCompleted);
            }
            this.InvokeAsync("PrestazioniRefertiPerPaziente", new object[] {
                        IdPaziente,
                        DallaDataReferto,
                        SistemaErogante,
                        RepartoErogante,
                        PrestazioneCodice,
                        SezioneCodice}, this.PrestazioniRefertiPerPazienteOperationCompleted, userState);
        }
        
        private void OnPrestazioniRefertiPerPazienteOperationCompleted(object arg) {
            if ((this.PrestazioniRefertiPerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrestazioniRefertiPerPazienteCompleted(this, new PrestazioniRefertiPerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PrestazioniMatriceLabPerPaziente" +
            "", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrestazioniMatriceLabPerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("PrestazioniMatriceLabPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrestazioniMatriceLabPerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrestazioniMatriceLabPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPrestazioniMatriceLabPerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLabPerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.PrestazioniMatriceLabPerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLabPerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.PrestazioniMatriceLabPerPazienteOperationCompleted == null)) {
                this.PrestazioniMatriceLabPerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrestazioniMatriceLabPerPazienteOperationCompleted);
            }
            this.InvokeAsync("PrestazioniMatriceLabPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.PrestazioniMatriceLabPerPazienteOperationCompleted, userState);
        }
        
        private void OnPrestazioniMatriceLabPerPazienteOperationCompleted(object arg) {
            if ((this.PrestazioniMatriceLabPerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrestazioniMatriceLabPerPazienteCompleted(this, new PrestazioniMatriceLabPerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PrestazioniMatriceLabPerNosologi" +
            "coAzienda", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrestazioniMatriceLabPerNosologicoAzienda(string NumeroNosologico, string AziendaErogante) {
            object[] results = this.Invoke("PrestazioniMatriceLabPerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrestazioniMatriceLabPerNosologicoAzienda(string NumeroNosologico, string AziendaErogante, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrestazioniMatriceLabPerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPrestazioniMatriceLabPerNosologicoAzienda(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLabPerNosologicoAziendaAsync(string NumeroNosologico, string AziendaErogante) {
            this.PrestazioniMatriceLabPerNosologicoAziendaAsync(NumeroNosologico, AziendaErogante, null);
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLabPerNosologicoAziendaAsync(string NumeroNosologico, string AziendaErogante, object userState) {
            if ((this.PrestazioniMatriceLabPerNosologicoAziendaOperationCompleted == null)) {
                this.PrestazioniMatriceLabPerNosologicoAziendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrestazioniMatriceLabPerNosologicoAziendaOperationCompleted);
            }
            this.InvokeAsync("PrestazioniMatriceLabPerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante}, this.PrestazioniMatriceLabPerNosologicoAziendaOperationCompleted, userState);
        }
        
        private void OnPrestazioniMatriceLabPerNosologicoAziendaOperationCompleted(object arg) {
            if ((this.PrestazioniMatriceLabPerNosologicoAziendaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrestazioniMatriceLabPerNosologicoAziendaCompleted(this, new PrestazioniMatriceLabPerNosologicoAziendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PrestazioniMatriceLab2PerPazient" +
            "e", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrestazioniMatriceLab2PerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("PrestazioniMatriceLab2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrestazioniMatriceLab2PerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrestazioniMatriceLab2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPrestazioniMatriceLab2PerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLab2PerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.PrestazioniMatriceLab2PerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLab2PerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.PrestazioniMatriceLab2PerPazienteOperationCompleted == null)) {
                this.PrestazioniMatriceLab2PerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrestazioniMatriceLab2PerPazienteOperationCompleted);
            }
            this.InvokeAsync("PrestazioniMatriceLab2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.PrestazioniMatriceLab2PerPazienteOperationCompleted, userState);
        }
        
        private void OnPrestazioniMatriceLab2PerPazienteOperationCompleted(object arg) {
            if ((this.PrestazioniMatriceLab2PerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrestazioniMatriceLab2PerPazienteCompleted(this, new PrestazioniMatriceLab2PerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PrestazioniMatriceLab2PerNosolog" +
            "icoAzienda", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrestazioniMatriceLab2PerNosologicoAzienda(string NumeroNosologico, string AziendaErogante) {
            object[] results = this.Invoke("PrestazioniMatriceLab2PerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrestazioniMatriceLab2PerNosologicoAzienda(string NumeroNosologico, string AziendaErogante, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrestazioniMatriceLab2PerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPrestazioniMatriceLab2PerNosologicoAzienda(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLab2PerNosologicoAziendaAsync(string NumeroNosologico, string AziendaErogante) {
            this.PrestazioniMatriceLab2PerNosologicoAziendaAsync(NumeroNosologico, AziendaErogante, null);
        }
        
        /// <remarks/>
        public void PrestazioniMatriceLab2PerNosologicoAziendaAsync(string NumeroNosologico, string AziendaErogante, object userState) {
            if ((this.PrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted == null)) {
                this.PrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted);
            }
            this.InvokeAsync("PrestazioniMatriceLab2PerNosologicoAzienda", new object[] {
                        NumeroNosologico,
                        AziendaErogante}, this.PrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted, userState);
        }
        
        private void OnPrestazioniMatriceLab2PerNosologicoAziendaOperationCompleted(object arg) {
            if ((this.PrestazioniMatriceLab2PerNosologicoAziendaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrestazioniMatriceLab2PerNosologicoAziendaCompleted(this, new PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/EventiPerPaziente", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventiPerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("EventiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEventiPerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EventiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEventiPerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventiPerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.EventiPerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void EventiPerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.EventiPerPazienteOperationCompleted == null)) {
                this.EventiPerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventiPerPazienteOperationCompleted);
            }
            this.InvokeAsync("EventiPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.EventiPerPazienteOperationCompleted, userState);
        }
        
        private void OnEventiPerPazienteOperationCompleted(object arg) {
            if ((this.EventiPerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventiPerPazienteCompleted(this, new EventiPerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/EventiPerPazienteFuzzy", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventiPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("EventiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEventiPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EventiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEventiPerPazienteFuzzy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventiPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.EventiPerPazienteFuzzyAsync(Cognome, Nome, DataNascita, CodiceFiscale, CodiceSanitario, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void EventiPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.EventiPerPazienteFuzzyOperationCompleted == null)) {
                this.EventiPerPazienteFuzzyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventiPerPazienteFuzzyOperationCompleted);
            }
            this.InvokeAsync("EventiPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.EventiPerPazienteFuzzyOperationCompleted, userState);
        }
        
        private void OnEventiPerPazienteFuzzyOperationCompleted(object arg) {
            if ((this.EventiPerPazienteFuzzyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventiPerPazienteFuzzyCompleted(this, new EventiPerPazienteFuzzyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/EventiPerPazienteRiferimenti", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventiPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("EventiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEventiPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EventiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEventiPerPazienteRiferimenti(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventiPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.EventiPerPazienteRiferimentiAsync(CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void EventiPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.EventiPerPazienteRiferimentiOperationCompleted == null)) {
                this.EventiPerPazienteRiferimentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventiPerPazienteRiferimentiOperationCompleted);
            }
            this.InvokeAsync("EventiPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.EventiPerPazienteRiferimentiOperationCompleted, userState);
        }
        
        private void OnEventiPerPazienteRiferimentiOperationCompleted(object arg) {
            if ((this.EventiPerPazienteRiferimentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventiPerPazienteRiferimentiCompleted(this, new EventiPerPazienteRiferimentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/EventiPerNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventiPerNosologico(string Nosologico, string DallaData, string AllaData) {
            object[] results = this.Invoke("EventiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEventiPerNosologico(string Nosologico, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EventiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEventiPerNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventiPerNosologicoAsync(string Nosologico, string DallaData, string AllaData) {
            this.EventiPerNosologicoAsync(Nosologico, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void EventiPerNosologicoAsync(string Nosologico, string DallaData, string AllaData, object userState) {
            if ((this.EventiPerNosologicoOperationCompleted == null)) {
                this.EventiPerNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventiPerNosologicoOperationCompleted);
            }
            this.InvokeAsync("EventiPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, this.EventiPerNosologicoOperationCompleted, userState);
        }
        
        private void OnEventiPerNosologicoOperationCompleted(object arg) {
            if ((this.EventiPerNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventiPerNosologicoCompleted(this, new EventiPerNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/EventoPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventoPerId(string IdEvento) {
            object[] results = this.Invoke("EventoPerId", new object[] {
                        IdEvento});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEventoPerId(string IdEvento, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EventoPerId", new object[] {
                        IdEvento}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEventoPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventoPerIdAsync(string IdEvento) {
            this.EventoPerIdAsync(IdEvento, null);
        }
        
        /// <remarks/>
        public void EventoPerIdAsync(string IdEvento, object userState) {
            if ((this.EventoPerIdOperationCompleted == null)) {
                this.EventoPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventoPerIdOperationCompleted);
            }
            this.InvokeAsync("EventoPerId", new object[] {
                        IdEvento}, this.EventoPerIdOperationCompleted, userState);
        }
        
        private void OnEventoPerIdOperationCompleted(object arg) {
            if ((this.EventoPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventoPerIdCompleted(this, new EventoPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveriPerPaziente", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveriPerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("RicoveriPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveriPerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveriPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveriPerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.RicoveriPerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.RicoveriPerPazienteOperationCompleted == null)) {
                this.RicoveriPerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveriPerPazienteOperationCompleted);
            }
            this.InvokeAsync("RicoveriPerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.RicoveriPerPazienteOperationCompleted, userState);
        }
        
        private void OnRicoveriPerPazienteOperationCompleted(object arg) {
            if ((this.RicoveriPerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveriPerPazienteCompleted(this, new RicoveriPerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveriPerPazienteFuzzy", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveriPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("RicoveriPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveriPerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveriPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveriPerPazienteFuzzy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.RicoveriPerPazienteFuzzyAsync(Cognome, Nome, DataNascita, CodiceFiscale, CodiceSanitario, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.RicoveriPerPazienteFuzzyOperationCompleted == null)) {
                this.RicoveriPerPazienteFuzzyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveriPerPazienteFuzzyOperationCompleted);
            }
            this.InvokeAsync("RicoveriPerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.RicoveriPerPazienteFuzzyOperationCompleted, userState);
        }
        
        private void OnRicoveriPerPazienteFuzzyOperationCompleted(object arg) {
            if ((this.RicoveriPerPazienteFuzzyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveriPerPazienteFuzzyCompleted(this, new RicoveriPerPazienteFuzzyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveriPerPazienteRiferimenti", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveriPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("RicoveriPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveriPerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveriPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveriPerPazienteRiferimenti(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.RicoveriPerPazienteRiferimentiAsync(CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RicoveriPerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.RicoveriPerPazienteRiferimentiOperationCompleted == null)) {
                this.RicoveriPerPazienteRiferimentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveriPerPazienteRiferimentiOperationCompleted);
            }
            this.InvokeAsync("RicoveriPerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.RicoveriPerPazienteRiferimentiOperationCompleted, userState);
        }
        
        private void OnRicoveriPerPazienteRiferimentiOperationCompleted(object arg) {
            if ((this.RicoveriPerPazienteRiferimentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveriPerPazienteRiferimentiCompleted(this, new RicoveriPerPazienteRiferimentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveriPerNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveriPerNosologico(string Nosologico, string DallaData, string AllaData) {
            object[] results = this.Invoke("RicoveriPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveriPerNosologico(string Nosologico, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveriPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveriPerNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveriPerNosologicoAsync(string Nosologico, string DallaData, string AllaData) {
            this.RicoveriPerNosologicoAsync(Nosologico, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void RicoveriPerNosologicoAsync(string Nosologico, string DallaData, string AllaData, object userState) {
            if ((this.RicoveriPerNosologicoOperationCompleted == null)) {
                this.RicoveriPerNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveriPerNosologicoOperationCompleted);
            }
            this.InvokeAsync("RicoveriPerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, this.RicoveriPerNosologicoOperationCompleted, userState);
        }
        
        private void OnRicoveriPerNosologicoOperationCompleted(object arg) {
            if ((this.RicoveriPerNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveriPerNosologicoCompleted(this, new RicoveriPerNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveroPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveroPerId(string IdRicovero) {
            object[] results = this.Invoke("RicoveroPerId", new object[] {
                        IdRicovero});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveroPerId(string IdRicovero, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveroPerId", new object[] {
                        IdRicovero}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveroPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveroPerIdAsync(string IdRicovero) {
            this.RicoveroPerIdAsync(IdRicovero, null);
        }
        
        /// <remarks/>
        public void RicoveroPerIdAsync(string IdRicovero, object userState) {
            if ((this.RicoveroPerIdOperationCompleted == null)) {
                this.RicoveroPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveroPerIdOperationCompleted);
            }
            this.InvokeAsync("RicoveroPerId", new object[] {
                        IdRicovero}, this.RicoveroPerIdOperationCompleted, userState);
        }
        
        private void OnRicoveroPerIdOperationCompleted(object arg) {
            if ((this.RicoveroPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveroPerIdCompleted(this, new RicoveroPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveroPerNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveroPerNosologico(string NumeroNoslogico, string AziendaErogante) {
            object[] results = this.Invoke("RicoveroPerNosologico", new object[] {
                        NumeroNoslogico,
                        AziendaErogante});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveroPerNosologico(string NumeroNoslogico, string AziendaErogante, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveroPerNosologico", new object[] {
                        NumeroNoslogico,
                        AziendaErogante}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveroPerNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveroPerNosologicoAsync(string NumeroNoslogico, string AziendaErogante) {
            this.RicoveroPerNosologicoAsync(NumeroNoslogico, AziendaErogante, null);
        }
        
        /// <remarks/>
        public void RicoveroPerNosologicoAsync(string NumeroNoslogico, string AziendaErogante, object userState) {
            if ((this.RicoveroPerNosologicoOperationCompleted == null)) {
                this.RicoveroPerNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveroPerNosologicoOperationCompleted);
            }
            this.InvokeAsync("RicoveroPerNosologico", new object[] {
                        NumeroNoslogico,
                        AziendaErogante}, this.RicoveroPerNosologicoOperationCompleted, userState);
        }
        
        private void OnRicoveroPerNosologicoOperationCompleted(object arg) {
            if ((this.RicoveroPerNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveroPerNosologicoCompleted(this, new RicoveroPerNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerPaziente", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerPaziente(string IdPaziente, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerPaziente(string IdPaziente, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerPaziente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerPazienteAsync(string IdPaziente, string DallaData, string AllaData) {
            this.Referti2PerPazienteAsync(IdPaziente, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerPazienteAsync(string IdPaziente, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerPazienteOperationCompleted == null)) {
                this.Referti2PerPazienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerPazienteOperationCompleted);
            }
            this.InvokeAsync("Referti2PerPaziente", new object[] {
                        IdPaziente,
                        DallaData,
                        AllaData}, this.Referti2PerPazienteOperationCompleted, userState);
        }
        
        private void OnReferti2PerPazienteOperationCompleted(object arg) {
            if ((this.Referti2PerPazienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerPazienteCompleted(this, new Referti2PerPazienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerPazienteClassificazio" +
            "ne", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerPazienteClassificazione(string IdPaziente, string Classificazione, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerPazienteClassificazione(string IdPaziente, string Classificazione, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerPazienteClassificazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerPazienteClassificazioneAsync(string IdPaziente, string Classificazione, string DallaData, string AllaData) {
            this.Referti2PerPazienteClassificazioneAsync(IdPaziente, Classificazione, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerPazienteClassificazioneAsync(string IdPaziente, string Classificazione, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerPazienteClassificazioneOperationCompleted == null)) {
                this.Referti2PerPazienteClassificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerPazienteClassificazioneOperationCompleted);
            }
            this.InvokeAsync("Referti2PerPazienteClassificazione", new object[] {
                        IdPaziente,
                        Classificazione,
                        DallaData,
                        AllaData}, this.Referti2PerPazienteClassificazioneOperationCompleted, userState);
        }
        
        private void OnReferti2PerPazienteClassificazioneOperationCompleted(object arg) {
            if ((this.Referti2PerPazienteClassificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerPazienteClassificazioneCompleted(this, new Referti2PerPazienteClassificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerPazienteFuzzy", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerPazienteFuzzy(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerPazienteFuzzy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.Referti2PerPazienteFuzzyAsync(Cognome, Nome, DataNascita, CodiceFiscale, CodiceSanitario, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerPazienteFuzzyAsync(string Cognome, string Nome, string DataNascita, string CodiceFiscale, string CodiceSanitario, string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerPazienteFuzzyOperationCompleted == null)) {
                this.Referti2PerPazienteFuzzyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerPazienteFuzzyOperationCompleted);
            }
            this.InvokeAsync("Referti2PerPazienteFuzzy", new object[] {
                        Cognome,
                        Nome,
                        DataNascita,
                        CodiceFiscale,
                        CodiceSanitario,
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.Referti2PerPazienteFuzzyOperationCompleted, userState);
        }
        
        private void OnReferti2PerPazienteFuzzyOperationCompleted(object arg) {
            if ((this.Referti2PerPazienteFuzzyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerPazienteFuzzyCompleted(this, new Referti2PerPazienteFuzzyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerPazienteRiferimenti", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerPazienteRiferimenti(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerPazienteRiferimenti(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData) {
            this.Referti2PerPazienteRiferimentiAsync(CodiceAnagraficaCentrale, NomeAnagraficaCentrale, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerPazienteRiferimentiAsync(string CodiceAnagraficaCentrale, string NomeAnagraficaCentrale, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerPazienteRiferimentiOperationCompleted == null)) {
                this.Referti2PerPazienteRiferimentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerPazienteRiferimentiOperationCompleted);
            }
            this.InvokeAsync("Referti2PerPazienteRiferimenti", new object[] {
                        CodiceAnagraficaCentrale,
                        NomeAnagraficaCentrale,
                        DallaData,
                        AllaData}, this.Referti2PerPazienteRiferimentiOperationCompleted, userState);
        }
        
        private void OnReferti2PerPazienteRiferimentiOperationCompleted(object arg) {
            if ((this.Referti2PerPazienteRiferimentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerPazienteRiferimentiCompleted(this, new Referti2PerPazienteRiferimentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerClassificazione", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerClassificazione(string Classificazione, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerClassificazione(string Classificazione, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerClassificazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerClassificazioneAsync(string Classificazione, string DallaData, string AllaData) {
            this.Referti2PerClassificazioneAsync(Classificazione, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerClassificazioneAsync(string Classificazione, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerClassificazioneOperationCompleted == null)) {
                this.Referti2PerClassificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerClassificazioneOperationCompleted);
            }
            this.InvokeAsync("Referti2PerClassificazione", new object[] {
                        Classificazione,
                        DallaData,
                        AllaData}, this.Referti2PerClassificazioneOperationCompleted, userState);
        }
        
        private void OnReferti2PerClassificazioneOperationCompleted(object arg) {
            if ((this.Referti2PerClassificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerClassificazioneCompleted(this, new Referti2PerClassificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerNosologico(string Nosologico, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerNosologico(string Nosologico, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerNosologicoAsync(string Nosologico, string DallaData, string AllaData) {
            this.Referti2PerNosologicoAsync(Nosologico, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerNosologicoAsync(string Nosologico, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerNosologicoOperationCompleted == null)) {
                this.Referti2PerNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerNosologicoOperationCompleted);
            }
            this.InvokeAsync("Referti2PerNosologico", new object[] {
                        Nosologico,
                        DallaData,
                        AllaData}, this.Referti2PerNosologicoOperationCompleted, userState);
        }
        
        private void OnReferti2PerNosologicoOperationCompleted(object arg) {
            if ((this.Referti2PerNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerNosologicoCompleted(this, new Referti2PerNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerNosologicoAzienda", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerNosologicoAzienda(string Nosologico, string Azienda) {
            object[] results = this.Invoke("Referti2PerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerNosologicoAzienda(string Nosologico, string Azienda, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerNosologicoAzienda(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerNosologicoAziendaAsync(string Nosologico, string Azienda) {
            this.Referti2PerNosologicoAziendaAsync(Nosologico, Azienda, null);
        }
        
        /// <remarks/>
        public void Referti2PerNosologicoAziendaAsync(string Nosologico, string Azienda, object userState) {
            if ((this.Referti2PerNosologicoAziendaOperationCompleted == null)) {
                this.Referti2PerNosologicoAziendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerNosologicoAziendaOperationCompleted);
            }
            this.InvokeAsync("Referti2PerNosologicoAzienda", new object[] {
                        Nosologico,
                        Azienda}, this.Referti2PerNosologicoAziendaOperationCompleted, userState);
        }
        
        private void OnReferti2PerNosologicoAziendaOperationCompleted(object arg) {
            if ((this.Referti2PerNosologicoAziendaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerNosologicoAziendaCompleted(this, new Referti2PerNosologicoAziendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerNumeroReferto", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerNumeroReferto(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno) {
            object[] results = this.Invoke("Referti2PerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerNumeroReferto(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerNumeroReferto(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerNumeroRefertoAsync(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno) {
            this.Referti2PerNumeroRefertoAsync(AziendaErogante, SistemaErogante, RepartoErogante, NumeroReferto, AnnoReferto, CodiceFiscale, IdPazienteEsterno, null);
        }
        
        /// <remarks/>
        public void Referti2PerNumeroRefertoAsync(string AziendaErogante, string SistemaErogante, string RepartoErogante, string NumeroReferto, string AnnoReferto, string CodiceFiscale, string IdPazienteEsterno, object userState) {
            if ((this.Referti2PerNumeroRefertoOperationCompleted == null)) {
                this.Referti2PerNumeroRefertoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerNumeroRefertoOperationCompleted);
            }
            this.InvokeAsync("Referti2PerNumeroReferto", new object[] {
                        AziendaErogante,
                        SistemaErogante,
                        RepartoErogante,
                        NumeroReferto,
                        AnnoReferto,
                        CodiceFiscale,
                        IdPazienteEsterno}, this.Referti2PerNumeroRefertoOperationCompleted, userState);
        }
        
        private void OnReferti2PerNumeroRefertoOperationCompleted(object arg) {
            if ((this.Referti2PerNumeroRefertoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerNumeroRefertoCompleted(this, new Referti2PerNumeroRefertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerPazienteNosologico", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerPazienteNosologico(string IdPaziente, string Nosologico, string AziendaErogante, string DallaData, string AllaData) {
            object[] results = this.Invoke("Referti2PerPazienteNosologico", new object[] {
                        IdPaziente,
                        Nosologico,
                        AziendaErogante,
                        DallaData,
                        AllaData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerPazienteNosologico(string IdPaziente, string Nosologico, string AziendaErogante, string DallaData, string AllaData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerPazienteNosologico", new object[] {
                        IdPaziente,
                        Nosologico,
                        AziendaErogante,
                        DallaData,
                        AllaData}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerPazienteNosologico(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerPazienteNosologicoAsync(string IdPaziente, string Nosologico, string AziendaErogante, string DallaData, string AllaData) {
            this.Referti2PerPazienteNosologicoAsync(IdPaziente, Nosologico, AziendaErogante, DallaData, AllaData, null);
        }
        
        /// <remarks/>
        public void Referti2PerPazienteNosologicoAsync(string IdPaziente, string Nosologico, string AziendaErogante, string DallaData, string AllaData, object userState) {
            if ((this.Referti2PerPazienteNosologicoOperationCompleted == null)) {
                this.Referti2PerPazienteNosologicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerPazienteNosologicoOperationCompleted);
            }
            this.InvokeAsync("Referti2PerPazienteNosologico", new object[] {
                        IdPaziente,
                        Nosologico,
                        AziendaErogante,
                        DallaData,
                        AllaData}, this.Referti2PerPazienteNosologicoOperationCompleted, userState);
        }
        
        private void OnReferti2PerPazienteNosologicoOperationCompleted(object arg) {
            if ((this.Referti2PerPazienteNosologicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerPazienteNosologicoCompleted(this, new Referti2PerPazienteNosologicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerNumeroPrenotazione", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerNumeroPrenotazione(string NumeroPrenotazione) {
            object[] results = this.Invoke("Referti2PerNumeroPrenotazione", new object[] {
                        NumeroPrenotazione});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerNumeroPrenotazione(string NumeroPrenotazione, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerNumeroPrenotazione", new object[] {
                        NumeroPrenotazione}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerNumeroPrenotazione(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerNumeroPrenotazioneAsync(string NumeroPrenotazione) {
            this.Referti2PerNumeroPrenotazioneAsync(NumeroPrenotazione, null);
        }
        
        /// <remarks/>
        public void Referti2PerNumeroPrenotazioneAsync(string NumeroPrenotazione, object userState) {
            if ((this.Referti2PerNumeroPrenotazioneOperationCompleted == null)) {
                this.Referti2PerNumeroPrenotazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerNumeroPrenotazioneOperationCompleted);
            }
            this.InvokeAsync("Referti2PerNumeroPrenotazione", new object[] {
                        NumeroPrenotazione}, this.Referti2PerNumeroPrenotazioneOperationCompleted, userState);
        }
        
        private void OnReferti2PerNumeroPrenotazioneOperationCompleted(object arg) {
            if ((this.Referti2PerNumeroPrenotazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerNumeroPrenotazioneCompleted(this, new Referti2PerNumeroPrenotazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Referti2PerIdOrderEntry", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Referti2PerIdOrderEntry(string IdOrderEntry) {
            object[] results = this.Invoke("Referti2PerIdOrderEntry", new object[] {
                        IdOrderEntry});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReferti2PerIdOrderEntry(string IdOrderEntry, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Referti2PerIdOrderEntry", new object[] {
                        IdOrderEntry}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndReferti2PerIdOrderEntry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Referti2PerIdOrderEntryAsync(string IdOrderEntry) {
            this.Referti2PerIdOrderEntryAsync(IdOrderEntry, null);
        }
        
        /// <remarks/>
        public void Referti2PerIdOrderEntryAsync(string IdOrderEntry, object userState) {
            if ((this.Referti2PerIdOrderEntryOperationCompleted == null)) {
                this.Referti2PerIdOrderEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReferti2PerIdOrderEntryOperationCompleted);
            }
            this.InvokeAsync("Referti2PerIdOrderEntry", new object[] {
                        IdOrderEntry}, this.Referti2PerIdOrderEntryOperationCompleted, userState);
        }
        
        private void OnReferti2PerIdOrderEntryOperationCompleted(object arg) {
            if ((this.Referti2PerIdOrderEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Referti2PerIdOrderEntryCompleted(this, new Referti2PerIdOrderEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RicoveriPerReparto", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RicoveriPerReparto(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita) {
            object[] results = this.Invoke("RicoveriPerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveriPerReparto(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RicoveriPerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveriPerReparto(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RicoveriPerRepartoAsync(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita) {
            this.RicoveriPerRepartoAsync(AziendaErogante, CodiceReparto, Ricoverati, DataAccettazioneDal, DataAccettazioneAl, Cognome, Nome, DataNascita, Luogonascita, null);
        }
        
        /// <remarks/>
        public void RicoveriPerRepartoAsync(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita, object userState) {
            if ((this.RicoveriPerRepartoOperationCompleted == null)) {
                this.RicoveriPerRepartoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveriPerRepartoOperationCompleted);
            }
            this.InvokeAsync("RicoveriPerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita}, this.RicoveriPerRepartoOperationCompleted, userState);
        }
        
        private void OnRicoveriPerRepartoOperationCompleted(object arg) {
            if ((this.RicoveriPerRepartoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RicoveriPerRepartoCompleted(this, new RicoveriPerRepartoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/Ricoveri2PerReparto", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Ricoveri2PerReparto(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string DataDimissioneDal, string DataDimissioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita) {
            object[] results = this.Invoke("Ricoveri2PerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        DataDimissioneDal,
                        DataDimissioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRicoveri2PerReparto(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string DataDimissioneDal, string DataDimissioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ricoveri2PerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        DataDimissioneDal,
                        DataDimissioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRicoveri2PerReparto(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Ricoveri2PerRepartoAsync(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string DataDimissioneDal, string DataDimissioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita) {
            this.Ricoveri2PerRepartoAsync(AziendaErogante, CodiceReparto, Ricoverati, DataAccettazioneDal, DataAccettazioneAl, DataDimissioneDal, DataDimissioneAl, Cognome, Nome, DataNascita, Luogonascita, null);
        }
        
        /// <remarks/>
        public void Ricoveri2PerRepartoAsync(string AziendaErogante, string CodiceReparto, string Ricoverati, string DataAccettazioneDal, string DataAccettazioneAl, string DataDimissioneDal, string DataDimissioneAl, string Cognome, string Nome, string DataNascita, string Luogonascita, object userState) {
            if ((this.Ricoveri2PerRepartoOperationCompleted == null)) {
                this.Ricoveri2PerRepartoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRicoveri2PerRepartoOperationCompleted);
            }
            this.InvokeAsync("Ricoveri2PerReparto", new object[] {
                        AziendaErogante,
                        CodiceReparto,
                        Ricoverati,
                        DataAccettazioneDal,
                        DataAccettazioneAl,
                        DataDimissioneDal,
                        DataDimissioneAl,
                        Cognome,
                        Nome,
                        DataNascita,
                        Luogonascita}, this.Ricoveri2PerRepartoOperationCompleted, userState);
        }
        
        private void OnRicoveri2PerRepartoOperationCompleted(object arg) {
            if ((this.Ricoveri2PerRepartoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ricoveri2PerRepartoCompleted(this, new Ricoveri2PerRepartoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/RefertoPdfPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefertoPdfPerId(string IdReferto, string Rendering) {
            object[] results = this.Invoke("RefertoPdfPerId", new object[] {
                        IdReferto,
                        Rendering});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefertoPdfPerId(string IdReferto, string Rendering, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefertoPdfPerId", new object[] {
                        IdReferto,
                        Rendering}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRefertoPdfPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefertoPdfPerIdAsync(string IdReferto, string Rendering) {
            this.RefertoPdfPerIdAsync(IdReferto, Rendering, null);
        }
        
        /// <remarks/>
        public void RefertoPdfPerIdAsync(string IdReferto, string Rendering, object userState) {
            if ((this.RefertoPdfPerIdOperationCompleted == null)) {
                this.RefertoPdfPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefertoPdfPerIdOperationCompleted);
            }
            this.InvokeAsync("RefertoPdfPerId", new object[] {
                        IdReferto,
                        Rendering}, this.RefertoPdfPerIdOperationCompleted, userState);
        }
        
        private void OnRefertoPdfPerIdOperationCompleted(object arg) {
            if ((this.RefertoPdfPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefertoPdfPerIdCompleted(this, new RefertoPdfPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazientiRiepilogoPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazientiRiepilogoPerId(string[] IdPazienti, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni) {
            object[] results = this.Invoke("PazientiRiepilogoPerId", new object[] {
                        IdPazienti,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazientiRiepilogoPerId(string[] IdPazienti, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazientiRiepilogoPerId", new object[] {
                        IdPazienti,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazientiRiepilogoPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazientiRiepilogoPerIdAsync(string[] IdPazienti, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni) {
            this.PazientiRiepilogoPerIdAsync(IdPazienti, DatiDaRestituire, DatiRefertiDaGiorni, DatiRicoveriDaGiorni, null);
        }
        
        /// <remarks/>
        public void PazientiRiepilogoPerIdAsync(string[] IdPazienti, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni, object userState) {
            if ((this.PazientiRiepilogoPerIdOperationCompleted == null)) {
                this.PazientiRiepilogoPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazientiRiepilogoPerIdOperationCompleted);
            }
            this.InvokeAsync("PazientiRiepilogoPerId", new object[] {
                        IdPazienti,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni}, this.PazientiRiepilogoPerIdOperationCompleted, userState);
        }
        
        private void OnPazientiRiepilogoPerIdOperationCompleted(object arg) {
            if ((this.PazientiRiepilogoPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazientiRiepilogoPerIdCompleted(this, new PazientiRiepilogoPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dwhClinico.org/webService/dataAccessTds/2/PazienteRiepilogoPerId", RequestNamespace="http://dwhClinico.org/webService/dataAccessTds/2", ResponseNamespace="http://dwhClinico.org/webService/dataAccessTds/2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PazienteRiepilogoPerId(string IdPaziente, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni) {
            object[] results = this.Invoke("PazienteRiepilogoPerId", new object[] {
                        IdPaziente,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPazienteRiepilogoPerId(string IdPaziente, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PazienteRiepilogoPerId", new object[] {
                        IdPaziente,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPazienteRiepilogoPerId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PazienteRiepilogoPerIdAsync(string IdPaziente, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni) {
            this.PazienteRiepilogoPerIdAsync(IdPaziente, DatiDaRestituire, DatiRefertiDaGiorni, DatiRicoveriDaGiorni, null);
        }
        
        /// <remarks/>
        public void PazienteRiepilogoPerIdAsync(string IdPaziente, int DatiDaRestituire, int DatiRefertiDaGiorni, int DatiRicoveriDaGiorni, object userState) {
            if ((this.PazienteRiepilogoPerIdOperationCompleted == null)) {
                this.PazienteRiepilogoPerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPazienteRiepilogoPerIdOperationCompleted);
            }
            this.InvokeAsync("PazienteRiepilogoPerId", new object[] {
                        IdPaziente,
                        DatiDaRestituire,
                        DatiRefertiDaGiorni,
                        DatiRicoveriDaGiorni}, this.PazienteRiepilogoPerIdOperationCompleted, userState);
        }
        
        private void OnPazienteRiepilogoPerIdOperationCompleted(object arg) {
            if ((this.PazienteRiepilogoPerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PazienteRiepilogoPerIdCompleted(this, new PazienteRiepilogoPerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientiCercaCompletedEventHandler(object sender, PazientiCercaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientiCercaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientiCercaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientiCercaSoundexCompletedEventHandler(object sender, PazientiCercaSoundexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientiCercaSoundexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientiCercaSoundexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientiCercaClassificazioneCompletedEventHandler(object sender, PazientiCercaClassificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientiCercaClassificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientiCercaClassificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientePerIdCompletedEventHandler(object sender, PazientePerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientePerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientePerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientePerAnagraficaCompletedEventHandler(object sender, PazientePerAnagraficaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientePerAnagraficaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientePerAnagraficaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerPazienteCompletedEventHandler(object sender, RefertiPerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerPazienteClassificazioneCompletedEventHandler(object sender, RefertiPerPazienteClassificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerPazienteClassificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerPazienteClassificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerPazienteFuzzyCompletedEventHandler(object sender, RefertiPerPazienteFuzzyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerPazienteFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerPazienteFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerPazienteRiferimentiCompletedEventHandler(object sender, RefertiPerPazienteRiferimentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerPazienteRiferimentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerPazienteRiferimentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerClassificazioneCompletedEventHandler(object sender, RefertiPerClassificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerClassificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerClassificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerNosologicoCompletedEventHandler(object sender, RefertiPerNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerNosologicoAziendaCompletedEventHandler(object sender, RefertiPerNosologicoAziendaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerNosologicoAziendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerNosologicoAziendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertiPerNumeroRefertoCompletedEventHandler(object sender, RefertiPerNumeroRefertoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertiPerNumeroRefertoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertiPerNumeroRefertoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertoPerIdCompletedEventHandler(object sender, RefertoPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertoPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertoPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrestazioniRefertiPerPazienteCompletedEventHandler(object sender, PrestazioniRefertiPerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrestazioniRefertiPerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrestazioniRefertiPerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrestazioniMatriceLabPerPazienteCompletedEventHandler(object sender, PrestazioniMatriceLabPerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrestazioniMatriceLabPerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrestazioniMatriceLabPerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrestazioniMatriceLabPerNosologicoAziendaCompletedEventHandler(object sender, PrestazioniMatriceLabPerNosologicoAziendaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrestazioniMatriceLabPerNosologicoAziendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrestazioniMatriceLabPerNosologicoAziendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrestazioniMatriceLab2PerPazienteCompletedEventHandler(object sender, PrestazioniMatriceLab2PerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrestazioniMatriceLab2PerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrestazioniMatriceLab2PerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventHandler(object sender, PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrestazioniMatriceLab2PerNosologicoAziendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventiPerPazienteCompletedEventHandler(object sender, EventiPerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventiPerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventiPerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventiPerPazienteFuzzyCompletedEventHandler(object sender, EventiPerPazienteFuzzyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventiPerPazienteFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventiPerPazienteFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventiPerPazienteRiferimentiCompletedEventHandler(object sender, EventiPerPazienteRiferimentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventiPerPazienteRiferimentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventiPerPazienteRiferimentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventiPerNosologicoCompletedEventHandler(object sender, EventiPerNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventiPerNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventiPerNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventoPerIdCompletedEventHandler(object sender, EventoPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventoPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventoPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveriPerPazienteCompletedEventHandler(object sender, RicoveriPerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveriPerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveriPerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveriPerPazienteFuzzyCompletedEventHandler(object sender, RicoveriPerPazienteFuzzyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveriPerPazienteFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveriPerPazienteFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveriPerPazienteRiferimentiCompletedEventHandler(object sender, RicoveriPerPazienteRiferimentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveriPerPazienteRiferimentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveriPerPazienteRiferimentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveriPerNosologicoCompletedEventHandler(object sender, RicoveriPerNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveriPerNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveriPerNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveroPerIdCompletedEventHandler(object sender, RicoveroPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveroPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveroPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveroPerNosologicoCompletedEventHandler(object sender, RicoveroPerNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveroPerNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveroPerNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerPazienteCompletedEventHandler(object sender, Referti2PerPazienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerPazienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerPazienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerPazienteClassificazioneCompletedEventHandler(object sender, Referti2PerPazienteClassificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerPazienteClassificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerPazienteClassificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerPazienteFuzzyCompletedEventHandler(object sender, Referti2PerPazienteFuzzyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerPazienteFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerPazienteFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerPazienteRiferimentiCompletedEventHandler(object sender, Referti2PerPazienteRiferimentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerPazienteRiferimentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerPazienteRiferimentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerClassificazioneCompletedEventHandler(object sender, Referti2PerClassificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerClassificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerClassificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerNosologicoCompletedEventHandler(object sender, Referti2PerNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerNosologicoAziendaCompletedEventHandler(object sender, Referti2PerNosologicoAziendaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerNosologicoAziendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerNosologicoAziendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerNumeroRefertoCompletedEventHandler(object sender, Referti2PerNumeroRefertoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerNumeroRefertoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerNumeroRefertoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerPazienteNosologicoCompletedEventHandler(object sender, Referti2PerPazienteNosologicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerPazienteNosologicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerPazienteNosologicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerNumeroPrenotazioneCompletedEventHandler(object sender, Referti2PerNumeroPrenotazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerNumeroPrenotazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerNumeroPrenotazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Referti2PerIdOrderEntryCompletedEventHandler(object sender, Referti2PerIdOrderEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Referti2PerIdOrderEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Referti2PerIdOrderEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RicoveriPerRepartoCompletedEventHandler(object sender, RicoveriPerRepartoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RicoveriPerRepartoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RicoveriPerRepartoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Ricoveri2PerRepartoCompletedEventHandler(object sender, Ricoveri2PerRepartoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ricoveri2PerRepartoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ricoveri2PerRepartoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefertoPdfPerIdCompletedEventHandler(object sender, RefertoPdfPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefertoPdfPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefertoPdfPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazientiRiepilogoPerIdCompletedEventHandler(object sender, PazientiRiepilogoPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazientiRiepilogoPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazientiRiepilogoPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PazienteRiepilogoPerIdCompletedEventHandler(object sender, PazienteRiepilogoPerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PazienteRiepilogoPerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PazienteRiepilogoPerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591